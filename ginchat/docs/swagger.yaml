basePath: /api/v1
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /index:
    get:
      responses:
        "200":
          description: OK
          schema:
            type: string
      tags:
      - 首页
  /user/createUser:
    post:
      description: insert a user data into database
      parameters:
      - description: 用户名
        in: formData
        name: name
        required: true
        type: string
      - description: 密码
        in: formData
        name: password
        required: true
        type: string
      - description: 确认密码
        in: formData
        name: repassword
        required: true
        type: string
      - description: 邮箱
        in: formData
        name: email
        type: string
      - description: 电话号码
        in: formData
        name: phone
        type: string
      responses:
        "200":
          description: message"}
          schema:
            type: string
      summary: Create a new user
      tags:
      - 用户注册
  /user/deleteUser:
    post:
      description: Delete a user from database
      parameters:
      - description: 用户id
        in: formData
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: message"}
          schema:
            type: string
      summary: Delete a user
      tags:
      - 用户删除
  /user/getUserList:
    get:
      description: get all user messages in database
      responses:
        "200":
          description: code", "data"}
          schema:
            type: string
      summary: List Users
      tags:
      - 用户服务
  /user/searchUserByNameAndPassword:
    post:
      description: get a user messages from database
      parameters:
      - description: 用户名
        in: formData
        name: name
        required: true
        type: string
      - description: 密码
        in: formData
        name: password
        required: true
        type: string
      responses:
        "200":
          description: message", "data"}
          schema:
            type: string
      summary: Get User message by name and password
      tags:
      - 用户服务
  /user/updateUser:
    post:
      description: Update user message in database
      parameters:
      - description: 用户id
        in: formData
        name: id
        required: true
        type: integer
      - description: 用户名
        in: formData
        name: name
        type: string
      - description: 密码
        in: formData
        name: password
        type: string
      - description: 电话号码
        in: formData
        name: phone
        type: string
      - description: 邮箱
        in: formData
        name: email
        type: string
      responses:
        "200":
          description: message"}
          schema:
            type: string
      summary: Update user message
      tags:
      - 更新用户信息
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
